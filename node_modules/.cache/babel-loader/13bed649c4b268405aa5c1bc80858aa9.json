{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar MentionSuggestionsPortal = function (_Component) {\n  _inherits(MentionSuggestionsPortal, _Component);\n  function MentionSuggestionsPortal(props) {\n    _classCallCheck(this, MentionSuggestionsPortal);\n\n    // Note: this is a workaround for an obscure issue: https://github.com/draft-js-plugins/draft-js-plugins/pull/667/files\n    // Ideally we can remove this in the future.\n    var _this = _possibleConstructorReturn(this, (MentionSuggestionsPortal.__proto__ || Object.getPrototypeOf(MentionSuggestionsPortal)).call(this, props));\n    _this.searchPortalRef = function (element) {\n      _this.searchPortal = element;\n    };\n    return _this;\n  }\n\n  // When inputting Japanese characters (or any complex alphabet which requires\n  // hitting enter to commit the characters), that action was causing a race\n  // condition when we used componentWillMount. By using componentDidMount\n  // instead of componentWillMount, the component will unmount unregister and\n  // then properly mount and register after. Prior to this change,\n  // componentWillMount would not fire after componentWillUnmount even though it\n  // was still in the DOM, so it wasn't re-registering the offsetkey.\n\n  _createClass(MentionSuggestionsPortal, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.props.store.register(this.props.offsetKey);\n      this.props.store.setIsOpened(true);\n      this.updatePortalClientRect(this.props);\n\n      // trigger a re-render so the MentionSuggestions becomes active\n      this.props.setEditorState(this.props.getEditorState());\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.updatePortalClientRect(nextProps);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.props.store.unregister(this.props.offsetKey);\n      this.props.store.setIsOpened(false);\n    }\n  }, {\n    key: 'updatePortalClientRect',\n    value: function updatePortalClientRect(props) {\n      var _this2 = this;\n      this.props.store.updatePortalClientRect(props.offsetKey, function () {\n        return _this2.searchPortal.getBoundingClientRect();\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('span', {\n        className: this.key,\n        ref: this.searchPortalRef\n      }, this.props.children);\n    }\n  }]);\n  return MentionSuggestionsPortal;\n}(_react.Component);\nexports.default = MentionSuggestionsPortal;","map":null,"metadata":{},"sourceType":"script"}