{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Separator = undefined;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _createStore = require('./utils/createStore');\nvar _createStore2 = _interopRequireDefault(_createStore);\nvar _Toolbar = require('./components/Toolbar');\nvar _Toolbar2 = _interopRequireDefault(_Toolbar);\nvar _Separator = require('./components/Separator');\nvar _Separator2 = _interopRequireDefault(_Separator);\nvar _buttonStyles = {\n  \"buttonWrapper\": \"draftJsToolbar__buttonWrapper__1Dmqh\",\n  \"button\": \"draftJsToolbar__button__qi1gf\",\n  \"active\": \"draftJsToolbar__active__3qcpF\"\n};\nvar _buttonStyles2 = _interopRequireDefault(_buttonStyles);\nvar _toolbarStyles = {\n  \"toolbar\": \"draftJsToolbar__toolbar__dNtBH\"\n};\nvar _toolbarStyles2 = _interopRequireDefault(_toolbarStyles);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nexports.default = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultTheme = {\n    buttonStyles: _buttonStyles2.default,\n    toolbarStyles: _toolbarStyles2.default\n  };\n  var store = (0, _createStore2.default)({});\n  var _config$theme = config.theme,\n    theme = _config$theme === undefined ? defaultTheme : _config$theme;\n  var StaticToolbar = function StaticToolbar(props) {\n    return _react2.default.createElement(_Toolbar2.default, _extends({}, props, {\n      store: store,\n      theme: theme\n    }));\n  };\n  return {\n    initialize: function initialize(_ref) {\n      var getEditorState = _ref.getEditorState,\n        setEditorState = _ref.setEditorState;\n      store.updateItem('getEditorState', getEditorState);\n      store.updateItem('setEditorState', setEditorState);\n    },\n    // Re-Render the text-toolbar on selection change\n    onChange: function onChange(editorState) {\n      store.updateItem('selection', editorState.getSelection());\n      return editorState;\n    },\n    Toolbar: StaticToolbar\n  };\n};\nexports.Separator = _Separator2.default;","map":null,"metadata":{},"sourceType":"script"}