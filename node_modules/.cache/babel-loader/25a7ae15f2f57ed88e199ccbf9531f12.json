{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.containsFiles = containsFiles;\nexports.readFile = readFile;\nexports.readFiles = readFiles;\n// Check if drag event contains files (not text)\nfunction containsFiles(event) {\n  if (event.dataTransfer.types) {\n    for (var i = 0; i < event.dataTransfer.types.length; i += 1) {\n      if (event.dataTransfer.types[i] === 'Files') {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n// Read file contents intelligently as plain text/json, image as dataUrl or\n// anything else as binary\nfunction readFile(file) {\n  return new Promise(function (resolve) {\n    var reader = new FileReader();\n\n    // This is called when finished reading\n    reader.onload = function (event) {\n      // Return an array with one image\n      resolve({\n        // These are attributes like size, name, type, ...\n        lastModifiedDate: file.lastModifiedDate,\n        lastModified: file.lastModified,\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        // This is the files content as base64\n        src: event.target.result\n      });\n    };\n    if (file.type.indexOf('text/') === 0 || file.type === 'application/json') {\n      reader.readAsText(file);\n    } else if (file.type.indexOf('image/') === 0) {\n      reader.readAsDataURL(file);\n    } else {\n      reader.readAsBinaryString(file);\n    }\n  });\n}\n\n// Read multiple files using above function\nfunction readFiles(files) {\n  return Promise.all(files.map(readFile));\n}","map":null,"metadata":{},"sourceType":"script"}