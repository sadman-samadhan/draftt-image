{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _addVideo = require('./video/modifiers/addVideo');\nvar _addVideo2 = _interopRequireDefault(_addVideo);\nvar _DefaultVideoComponent = require('./video/components/DefaultVideoComponent');\nvar _DefaultVideoComponent2 = _interopRequireDefault(_DefaultVideoComponent);\nvar _constants = require('./video/constants');\nvar types = _interopRequireWildcard(_constants);\nvar _videoStyles = {\n  \"iframeContainer\": \"draftJsMentionPlugin__iframeContainer__21EVZ\",\n  \"iframe\": \"draftJsMentionPlugin__iframe__stjRT\",\n  \"invalidVideoSrc\": \"draftJsMentionPlugin__invalidVideoSrc__3dIji\"\n};\nvar _videoStyles2 = _interopRequireDefault(_videoStyles);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar defaultTheme = _videoStyles2.default;\nvar videoPlugin = function videoPlugin() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var theme = config.theme ? config.theme : defaultTheme;\n  var Video = config.videoComponent || _DefaultVideoComponent2.default;\n  if (config.decorator) {\n    Video = config.decorator(Video);\n  }\n  var ThemedVideo = function ThemedVideo(props) {\n    return _react2.default.createElement(Video, _extends({}, props, {\n      theme: theme\n    }));\n  };\n  return {\n    blockRendererFn: function blockRendererFn(block, _ref) {\n      var getEditorState = _ref.getEditorState;\n      if (block.getType() === types.ATOMIC) {\n        // TODO subject to change for draft-js next release\n        var contentState = getEditorState().getCurrentContent();\n        var entity = contentState.getEntity(block.getEntityAt(0));\n        var type = entity.getType();\n        var _entity$getData = entity.getData(),\n          src = _entity$getData.src;\n        if (type === types.VIDEOTYPE) {\n          return {\n            component: ThemedVideo,\n            editable: false,\n            props: {\n              src: src\n            }\n          };\n        }\n      }\n      return null;\n    },\n    addVideo: _addVideo2.default,\n    types: types\n  };\n};\nexports.default = videoPlugin;","map":null,"metadata":{},"sourceType":"script"}