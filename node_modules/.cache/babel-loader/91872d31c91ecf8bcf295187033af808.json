{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _draftJs = require('draft-js');\nvar _createDecorator = require('./createDecorator');\nvar _createDecorator2 = _interopRequireDefault(_createDecorator);\nvar _AlignmentTool = require('./AlignmentTool');\nvar _AlignmentTool2 = _interopRequireDefault(_AlignmentTool);\nvar _createStore = require('./utils/createStore');\nvar _createStore2 = _interopRequireDefault(_createStore);\nvar _buttonStyles = {\n  \"buttonWrapper\": \"draftJsEmojiPlugin__buttonWrapper__1Dmqh\",\n  \"button\": \"draftJsEmojiPlugin__button__qi1gf\",\n  \"active\": \"draftJsEmojiPlugin__active__3qcpF\"\n};\nvar _buttonStyles2 = _interopRequireDefault(_buttonStyles);\nvar _alignmentToolStyles = {\n  \"alignmentTool\": \"draftJsEmojiPlugin__alignmentTool__2mkQr\"\n};\nvar _alignmentToolStyles2 = _interopRequireDefault(_alignmentToolStyles);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar createSetAlignment = function createSetAlignment(contentBlock, _ref) {\n  var getEditorState = _ref.getEditorState,\n    setEditorState = _ref.setEditorState;\n  return function (data) {\n    var entityKey = contentBlock.getEntityAt(0);\n    if (entityKey) {\n      var editorState = getEditorState();\n      var contentState = editorState.getCurrentContent();\n      contentState.mergeEntityData(entityKey, _extends({}, data));\n      setEditorState(_draftJs.EditorState.forceSelection(editorState, editorState.getSelection()));\n    }\n  };\n};\nexports.default = function () {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var store = (0, _createStore2.default)({\n    isVisible: false\n  });\n  var defaultAlignmentToolTheme = {\n    buttonStyles: _buttonStyles2.default,\n    alignmentToolStyles: _alignmentToolStyles2.default\n  };\n  var _config$theme = config.theme,\n    theme = _config$theme === undefined ? defaultAlignmentToolTheme : _config$theme;\n  var DecoratedAlignmentTool = function DecoratedAlignmentTool(props) {\n    return _react2.default.createElement(_AlignmentTool2.default, _extends({}, props, {\n      store: store,\n      theme: theme\n    }));\n  };\n  return {\n    initialize: function initialize(_ref2) {\n      var getReadOnly = _ref2.getReadOnly,\n        getEditorState = _ref2.getEditorState,\n        setEditorState = _ref2.setEditorState;\n      store.updateItem('getReadOnly', getReadOnly);\n      store.updateItem('getEditorState', getEditorState);\n      store.updateItem('setEditorState', setEditorState);\n    },\n    decorator: (0, _createDecorator2.default)({\n      config: config,\n      store: store\n    }),\n    blockRendererFn: function blockRendererFn(contentBlock, _ref3) {\n      var getEditorState = _ref3.getEditorState,\n        setEditorState = _ref3.setEditorState;\n      var entityKey = contentBlock.getEntityAt(0);\n      var contentState = getEditorState().getCurrentContent();\n      var alignmentData = entityKey ? contentState.getEntity(entityKey).data : {};\n      return {\n        props: {\n          alignment: alignmentData.alignment || 'default',\n          setAlignment: createSetAlignment(contentBlock, {\n            getEditorState: getEditorState,\n            setEditorState: setEditorState\n          })\n        }\n      };\n    },\n    AlignmentTool: DecoratedAlignmentTool\n  };\n};","map":null,"metadata":{},"sourceType":"script"}