{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _draftJs = require('draft-js');\nvar _DraftOffsetKey = require('draft-js/lib/DraftOffsetKey');\nvar _DraftOffsetKey2 = _interopRequireDefault(_DraftOffsetKey);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n// Set selection of editor to next/previous block\nexports.default = function (getEditorState, setEditorState, newActiveBlock) {\n  var editorState = getEditorState();\n\n  // TODO verify that always a key-0-0 exists\n  var offsetKey = _DraftOffsetKey2.default.encode(newActiveBlock.getKey(), 0, 0);\n  var node = document.querySelectorAll('[data-offset-key=\"' + offsetKey + '\"]')[0];\n  // set the native selection to the node so the caret is not in the text and\n  // the selectionState matches the native selection\n  var selection = window.getSelection();\n  var range = document.createRange();\n  range.setStart(node, 0);\n  range.setEnd(node, 0);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  setEditorState(_draftJs.EditorState.forceSelection(editorState, new _draftJs.SelectionState({\n    anchorKey: newActiveBlock.getKey(),\n    anchorOffset: 0,\n    focusKey: newActiveBlock.getKey(),\n    focusOffset: 0,\n    isBackward: false\n  })));\n};","map":null,"metadata":{},"sourceType":"script"}