{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _draftJs = require('draft-js');\nvar _createDecorator = require('./createDecorator');\nvar _createDecorator2 = _interopRequireDefault(_createDecorator);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar createSetResizeData = function createSetResizeData(contentBlock, _ref) {\n  var getEditorState = _ref.getEditorState,\n    setEditorState = _ref.setEditorState;\n  return function (data) {\n    var entityKey = contentBlock.getEntityAt(0);\n    if (entityKey) {\n      var editorState = getEditorState();\n      var contentState = editorState.getCurrentContent();\n      contentState.mergeEntityData(entityKey, _extends({}, data));\n      setEditorState(_draftJs.EditorState.forceSelection(editorState, editorState.getSelection()));\n    }\n  };\n};\nexports.default = function (config) {\n  var store = {\n    getEditorRef: undefined,\n    getReadOnly: undefined,\n    getEditorState: undefined,\n    setEditorState: undefined\n  };\n  return {\n    initialize: function initialize(_ref2) {\n      var getEditorRef = _ref2.getEditorRef,\n        getReadOnly = _ref2.getReadOnly,\n        getEditorState = _ref2.getEditorState,\n        setEditorState = _ref2.setEditorState;\n      store.getReadOnly = getReadOnly;\n      store.getEditorRef = getEditorRef;\n      store.getEditorState = getEditorState;\n      store.setEditorState = setEditorState;\n    },\n    decorator: (0, _createDecorator2.default)({\n      config: config,\n      store: store\n    }),\n    blockRendererFn: function blockRendererFn(contentBlock, _ref3) {\n      var getEditorState = _ref3.getEditorState,\n        setEditorState = _ref3.setEditorState;\n      var entityKey = contentBlock.getEntityAt(0);\n      var contentState = getEditorState().getCurrentContent();\n      var resizeData = entityKey ? contentState.getEntity(entityKey).data : {};\n      return {\n        props: {\n          resizeData: resizeData,\n          setResizeData: createSetResizeData(contentBlock, {\n            getEditorState: getEditorState,\n            setEditorState: setEditorState\n          })\n        }\n      };\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}