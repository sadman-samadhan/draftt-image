{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar decodeOffsetKey = function decodeOffsetKey(offsetKey) {\n  var _offsetKey$split = offsetKey.split('-'),\n    _offsetKey$split2 = _slicedToArray(_offsetKey$split, 3),\n    blockKey = _offsetKey$split2[0],\n    decoratorKey = _offsetKey$split2[1],\n    leafKey = _offsetKey$split2[2];\n  return {\n    blockKey: blockKey,\n    decoratorKey: parseInt(decoratorKey, 10),\n    leafKey: parseInt(leafKey, 10)\n  };\n};\nexports.default = decodeOffsetKey;","map":null,"metadata":{},"sourceType":"script"}