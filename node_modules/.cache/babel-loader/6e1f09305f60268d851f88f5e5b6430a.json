{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = insertNewLine;\nvar _immutable = require('immutable');\nvar _draftJs = require('draft-js');\nvar insertBlockAfterSelection = function insertBlockAfterSelection(contentState, selectionState, newBlock) {\n  var targetKey = selectionState.getStartKey();\n  var array = [];\n  contentState.getBlockMap().forEach(function (block, blockKey) {\n    array.push(block);\n    if (blockKey !== targetKey) return;\n    array.push(newBlock);\n  });\n  return contentState.merge({\n    blockMap: _draftJs.BlockMapBuilder.createFromArray(array),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState.merge({\n      anchorKey: newBlock.getKey(),\n      anchorOffset: newBlock.getLength(),\n      focusKey: newBlock.getKey(),\n      focusOffset: newBlock.getLength(),\n      isBackward: false\n    })\n  });\n};\nfunction insertNewLine(editorState) {\n  var contentState = editorState.getCurrentContent();\n  var selectionState = editorState.getSelection();\n  var newLineBlock = new _draftJs.ContentBlock({\n    key: (0, _draftJs.genKey)(),\n    type: 'unstyled',\n    text: '',\n    characterList: (0, _immutable.List)()\n  });\n  var withNewLine = insertBlockAfterSelection(contentState, selectionState, newLineBlock);\n  var newContent = withNewLine.merge({\n    selectionAfter: withNewLine.getSelectionAfter().set('hasFocus', true)\n  });\n  return _draftJs.EditorState.push(editorState, newContent, 'insert-fragment');\n}","map":null,"metadata":{},"sourceType":"script"}